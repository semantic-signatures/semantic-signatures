diff --git a/third_party/blink/renderer/core/fetch/fetch_manager.cc b/third_party/blink/renderer/core/fetch/fetch_manager.cc
index 098a36938e2fce8d70dc1ce247ca20fc02d23096..c3d5f907ffdffae3603c906097411cb8c6e5e270 100644
--- a/third_party/blink/renderer/core/fetch/fetch_manager.cc
+++ b/third_party/blink/renderer/core/fetch/fetch_manager.cc
@@ -61,6 +61,15 @@
 #include "third_party/blink/renderer/platform/wtf/text/wtf_string.h"
 #include "third_party/blink/renderer/platform/wtf/vector.h"
 
+#include "brave/third_party/blink/brave_page_graph/buildflags/buildflags.h"
+#if BUILDFLAG(BRAVE_PAGE_GRAPH_ENABLED)
+#include "brave/third_party/blink/brave_page_graph/page_graph.h"
+#include "brave/third_party/blink/brave_page_graph/utilities/response_metadata.h"
+
+using brave_page_graph::PageGraph;
+#endif
+
+
 using network::mojom::FetchRedirectMode;
 using network::mojom::FetchRequestMode;
 using network::mojom::FetchResponseType;
@@ -308,7 +317,11 @@ bool FetchManager::Loader::WillFollowRedirect(
 }
 
 void FetchManager::Loader::DidReceiveResponse(
+#if BUILDFLAG(BRAVE_PAGE_GRAPH_ENABLED)
+    uint64_t brave_inspector_id,
+#else
     uint64_t,
+#endif
     const ResourceResponse& response) {
   // TODO(horo): This check could be false when we will use the response url
   // in service worker responses. (crbug.com/553535)
@@ -457,6 +470,16 @@ void FetchManager::Loader::DidReceiveResponse(
 
   response_has_no_store_header_ = response.CacheControlContainsNoStore();
 
+#if BUILDFLAG(BRAVE_PAGE_GRAPH_ENABLED)
+  {
+    PageGraph* page_graph = PageGraph::GetFromExecutionContext(*execution_context_);
+    if (page_graph != nullptr) {
+      page_graph->RegisterRequestComplete(brave_inspector_id,
+        ResourceType::kRaw, brave_page_graph::ResponseMetadata(response), "");
+    }
+  }
+#endif
+
   Response* r =
       Response::Create(resolver_->GetExecutionContext(), tainted_response);
   r->headers()->SetGuard(Headers::kImmutableGuard);
@@ -782,6 +805,17 @@ void FetchManager::Loader::PerformHTTPFetch(ExceptionState& exception_state) {
   threadable_loader_ = MakeGarbageCollected<ThreadableLoader>(
       *execution_context_, this, resource_loader_options);
   threadable_loader_->Start(request);
+#if BUILDFLAG(BRAVE_PAGE_GRAPH_ENABLED)
+  {
+    PageGraph* page_graph = PageGraph::GetFromExecutionContext(*execution_context_);
+    if (page_graph != nullptr) {
+      page_graph->RegisterRequestStartFromCurrentScript(
+        threadable_loader_->GetRawResource()->InspectorId(),
+        fetch_request_data_->Url(),
+        brave_page_graph::RequestType::kRequestTypeUnknown);
+    }
+  }
+#endif
 }
 
 // performDataFetch() is almost the same as performHTTPFetch(), except for:
@@ -809,6 +843,17 @@ void FetchManager::Loader::PerformDataFetch() {
   threadable_loader_ = MakeGarbageCollected<ThreadableLoader>(
       *execution_context_, this, resource_loader_options);
   threadable_loader_->Start(request);
+#if BUILDFLAG(BRAVE_PAGE_GRAPH_ENABLED)
+  {
+    PageGraph* page_graph = PageGraph::GetFromExecutionContext(*execution_context_);
+    if (page_graph != nullptr) {
+      page_graph->RegisterRequestStartFromCurrentScript(
+        threadable_loader_->GetRawResource()->InspectorId(),
+        fetch_request_data_->Url(),
+        brave_page_graph::RequestType::kRequestTypeUnknown);
+    }
+  }
+#endif
 }
 
 void FetchManager::Loader::Failed(const String& message) {
