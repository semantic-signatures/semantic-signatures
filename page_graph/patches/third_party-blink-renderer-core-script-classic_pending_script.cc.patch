diff --git a/third_party/blink/renderer/core/script/classic_pending_script.cc b/third_party/blink/renderer/core/script/classic_pending_script.cc
index 3bd0f996731b17ea6ac70da395a667eba4ebc874..a95708da564cd1a9b7f568623e2433ec0fcc0979 100644
--- a/third_party/blink/renderer/core/script/classic_pending_script.cc
+++ b/third_party/blink/renderer/core/script/classic_pending_script.cc
@@ -30,6 +30,16 @@
 #include "third_party/blink/renderer/platform/runtime_enabled_features.h"
 #include "third_party/blink/renderer/platform/wtf/functional.h"
 
+#include "brave/third_party/blink/brave_page_graph/buildflags/buildflags.h"
+#if BUILDFLAG(BRAVE_PAGE_GRAPH_ENABLED)
+#include "third_party/blink/renderer/core/html/html_script_element.h"
+#include "third_party/blink/renderer/core/dom/dom_node_ids.h"
+#include "brave/third_party/blink/brave_page_graph/types.h"
+#include "brave/third_party/blink/brave_page_graph/page_graph.h"
+#include "brave/third_party/blink/brave_page_graph/utilities/digest.h"
+#include "brave/third_party/blink/brave_page_graph/utilities/response_metadata.h"
+#endif
+
 namespace blink {
 
 // <specdef href="https://html.spec.whatwg.org/C/#fetch-a-classic-script">
@@ -64,8 +74,24 @@ ClassicPendingScript* ClassicPendingScript::Fetch(
   // We allow streaming, as WatchForLoad() is always called when the script
   // needs to execute and the ScriptResource is not finished, so
   // SetClientIsWaitingForFinished is always set on the resource.
+#if BUILDFLAG(BRAVE_PAGE_GRAPH_ENABLED)
+  ScriptResource* resource = ScriptResource::Fetch(params,
+      element_document.Fetcher(), pending_script,
+      ScriptResource::kAllowStreaming);
+  {
+    ::brave_page_graph::PageGraph* page_graph = element->GetDocument()
+      .GetPageGraph();
+    if (page_graph != nullptr) {
+      HTMLScriptElement* script_elm = static_cast<HTMLScriptElement*>(element);
+      page_graph->RegisterRequestStartFromElm(
+        DOMNodeIds::IdForNode(script_elm), resource->InspectorId(), url,
+        brave_page_graph::RequestType::kRequestTypeScriptClassic);
+    }
+  }
+#else
   ScriptResource::Fetch(params, element_document.Fetcher(), pending_script,
                         ScriptResource::kAllowStreaming);
+#endif
   pending_script->CheckState();
   return pending_script;
 }
@@ -273,6 +299,24 @@ void ClassicPendingScript::NotifyFinished(Resource* resource) {
                                          GetResource()->Url().GetString()));
 
   bool error_occurred = GetResource()->ErrorOccurred() || integrity_failure_;
+#if BUILDFLAG(BRAVE_PAGE_GRAPH_ENABLED)
+  {
+    ::brave_page_graph::PageGraph* page_graph = element->GetDocument()
+      .GetPageGraph();
+    if (page_graph != nullptr) {
+      const ResourceResponse& rep = resource->GetResponse();
+      const ::brave_page_graph::ResponseMetadata metadata(rep);
+
+      if (error_occurred) {
+        page_graph->RegisterRequestError(resource->InspectorId(), metadata);
+      } else {
+        page_graph->RegisterRequestComplete(resource->InspectorId(),
+            resource->GetType(), metadata,
+            ::brave_page_graph::ResourceDigest(GetResource()));
+      }
+    }
+  }
+#endif
   AdvanceReadyState(error_occurred ? kErrorOccurred : kReady);
 }
 
@@ -375,6 +419,20 @@ ClassicScript* ClassicPendingScript::GetSource(const KURL& document_url) const {
 
   ScriptSourceCode source_code(streamer_ready ? streamer : nullptr, resource,
                                not_streamed_reason);
+
+#if BUILDFLAG(BRAVE_PAGE_GRAPH_ENABLED)
+  if (is_external_) {
+    ::brave_page_graph::PageGraph* page_graph = GetElement()->GetDocument()
+      .GetPageGraph();
+    if (page_graph != nullptr) {
+      // Its possible the requested URL, and the URL for the returned
+      // resource, will change (e.g. HSTS, 301s, etc).  Make sure we
+      // use the originally requested URL to make sure everything lines up.
+      page_graph->RegisterUrlForScriptSource(resource->Url(), source_code);
+    }
+  }
+#endif
+
   // The base URL for external classic script is
   //
   // <spec href="https://html.spec.whatwg.org/C/#concept-script-base-url">
