diff --git a/third_party/blink/renderer/core/exported/web_document.cc b/third_party/blink/renderer/core/exported/web_document.cc
index 281fdefc185adfa271d9f165be7ef4c3d2e13303..85aaeb1dcf3bd708a732f6c3e5b3f8853c85081a 100644
--- a/third_party/blink/renderer/core/exported/web_document.cc
+++ b/third_party/blink/renderer/core/exported/web_document.cc
@@ -63,6 +63,12 @@
 #include "third_party/blink/renderer/platform/weborigin/security_origin.h"
 #include "third_party/blink/renderer/platform/wtf/casting.h"
 
+#include "brave/third_party/blink/brave_page_graph/buildflags/buildflags.h"
+#if BUILDFLAG(BRAVE_PAGE_GRAPH_ENABLED)
+#include "brave/third_party/blink/brave_page_graph/types.h"
+#include "brave/third_party/blink/brave_page_graph/page_graph.h"
+#endif
+
 namespace {
 
 static const blink::WebStyleSheetKey GenerateStyleSheetKey() {
@@ -281,6 +287,26 @@ void WebDocument::SetShowBeforeUnloadDialog(bool show_dialog) {
   doc->SetShowBeforeUnloadDialog(show_dialog);
 }
 
+#if BUILDFLAG(BRAVE_PAGE_GRAPH_ENABLED)
+void WebDocument::RegisterResourceBlockAd(const GURL& url,
+                                          const std::string& rule) {
+  Document* doc = Unwrap<Document>();
+  ::brave_page_graph::PageGraph* const page_graph = doc->GetPageGraph();
+  if (page_graph) {
+    page_graph->RegisterResourceBlockAd(url, rule);
+  }
+}
+
+void WebDocument::RegisterResourceBlockTracker(const GURL& url,
+                                               const std::string& host) {
+  Document* doc = Unwrap<Document>();
+  ::brave_page_graph::PageGraph* const page_graph = doc->GetPageGraph();
+  if (page_graph) {
+    page_graph->RegisterResourceBlockTracker(url, host);
+  }
+}
+#endif
+
 WebDocument::WebDocument(Document* elem) : WebNode(elem) {}
 
 DEFINE_WEB_NODE_TYPE_CASTS(WebDocument, ConstUnwrap<Node>()->IsDocumentNode())
